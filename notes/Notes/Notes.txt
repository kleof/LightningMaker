* issues: 
	missing "chunks" of line if line has too high width
		- check CleanShapes for line drawing to avoid gaps in lines of high width?
	set surface size to match lightning area and not whole screen, will it help with performance? (yes, it does, with GPU side of it!)
		- will need some margin though, so glow won't get cut
		- this should work for "stationary" lightnings, but for "moving", won't constant surface resizing be even worse?
	reduce number of parameters? or presets are enough?
	paremeters naming
	after changing colors some children still spawn with previous color, check passed variables
	neon blur not looking too good with vertical lines

- start/endpoints can be anything with x,y - objects, struct literal, LPoint, etc
- allow more instances to be added in visualizer?
- allow to set Default values for parameters (that are not passed on creation)

- less awkward children movement

- less directional, more up and down main lightning movement
var base_noise = perlin_noise(noise_offset + x_offset * density, spd);
var secondary_noise = perlin_noise(r + x_offset * density , -spd);
var y_offset = base_noise * height * height_reduction * smoothing + (secondary_noise * height  + random(turbulence) * choose(-1,1)) * smoothing_secondary;
v2
var base_noise = perlin_noise(noise_offset + x_offset * density, spd);
var secondary_noise = perlin_noise(r + x_offset * density , -spd);
var y_offset = base_noise * height *.5* height_reduction * smoothing + (secondary_noise * height * .5 + random(turbulence) * choose(-1,1)) * smoothing_secondary;

- dual color mode
glow_color = merge_color(c1, c2, i/num);

- heart-beat rainbow
var color1 = make_color_hsv((current_time*0.2 % 255), 255, 255);

- drain effect with slow speed and long length, long lasting children

- drawing every n'th frame?

if (!surface_exists(my_surf)) {
   my_surf = surface_create();
   surface_set_target(my_surf);
   draw_stuff();
   surface_reset_target();
}

draw_surface(my_surf, x, y);


- use sprite (with round edges) instead of lines?

function draw_line_sprite(_x1, _y1, _x2, _y2) {
    var _a    = point_direction(_x1, _y1, _x2, _y2);
    var _d    = point_distance(_x1, _y1, _x2, _y2);
    // 64 is the sprite's width and height
    draw_sprite_ext(sprite, 0, _x1, _y1, _d/64, 1/64, _a, color, 1);
}


- object pooling - Precreate all potentially needed children and use them, instead of creating and destroying
unsure if impactful enough to implement?


- surface size taken from window size, camera size or perhaps application surface (surface_get_width/height)?







