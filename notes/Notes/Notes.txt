* issues: 
	change width, height and other too ambiguous names
	missing "chunks" of line if line has too high width
		- check CleanShapes for line drawing to avoid gaps in lines of high width?
	set surface size to match lightning area and not whole screen, will it help with performance? (yes, it does, with GPU side of it!)
		- will need some margin though, so glow won't get cut
	are paremeter names clear enough?
	neon blur not looking too good with vertical lines

- add setting x,y to presets
- fade in newly created children/ animate/draw them from start to end /fading by darkening child color?
- fade out when child is about to die
- allow more instances to be added in visualizer?
- Default values for parameters

- less directional, more up and down main lightning movement
var base_noise = perlin_noise(noise_offset + x_offset * density, spd);
var secondary_noise = perlin_noise(r + x_offset * density , -spd);
var y_offset = base_noise * height * height_reduction * smoothing + (secondary_noise * height  + random(turbulence) * choose(-1,1)) * smoothing_secondary;
v2
var base_noise = perlin_noise(noise_offset + x_offset * density, spd);
var secondary_noise = perlin_noise(r + x_offset * density , -spd);
var y_offset = base_noise * height *.5* height_reduction * smoothing + (secondary_noise * height * .5 + random(turbulence) * choose(-1,1)) * smoothing_secondary;

- dual color mode
glow_color = merge_color(c1, c2, i/num);

- heart-beat rainbow
var color1 = make_color_hsv((current_time*0.2 % 255), 255, 255);

- drain effect with slow speed and long length, long lasting children

- children with different color(s)

- use sprite (with round edges) instead of lines?

function draw_line_sprite(_x1, _y1, _x2, _y2) {
    var _a    = point_direction(_x1, _y1, _x2, _y2);
    var _d    = point_distance(_x1, _y1, _x2, _y2);
    // 64 is the sprite's width and height
    draw_sprite_ext(sprite, 0, _x1, _y1, _d/64, 1/64, _a, color, 1);
}

- draw every 2nd/3rd frame?
- allow children's endpoint anywhere, on parents and other children, or maybe just on main branch?
- tween density? TweenFire(id, "ioQuad", 2, true, 0, 4, "density>", "@-.1");
- arch-like bend? +height(or additional param)*arc_curve?
- randomize each segment length?
- particles on end points (and slower, from line beam)

- object pooling - Precreate all potentially needed children and use them, instead of creating and destroying
unsure if impactful enough to implement?


- surface size taken from window size, camera size or perhaps application surface (surface_get_width/height)?




## [> Download <](https://github.com/kleof/LightningMaker/archive/refs/heads/main.zip)
 
### Basic Use:
```gml
// CREATE EVENT
bolt = new Lightning({x:100, y:100}, {x:300, y:500}, 12);

// DRAW EVENT
bolt.update();
```
Start/end-point (first 2 arguments) can be anything with `x` and `y` variables:  
struct literal (code above), object instance, etc.
```gml
// CREATE EVENT
start_point = instance_create_layer(0, 0, "Instances", obj_cloud);
end_point = instance_create_layer(0, 0, "Instances", obj_player);
bolt = new Lightning(start_point, end_point, 12);
```

_Run example project to customize lightning and generate code that will set all parameters_
\
\
\
When drawing more than one lightning utilizing same glow effect use `draw`,`glow_set`,`glow_reset` methods:
```gml
// DRAW EVENT
bolt.glow_set();

bolt.draw();
bolt_2.draw();
bolt_3.draw();
// draw anything here that you want to apply glow to

bolt.glow_reset();
```

## Resources:
Perlin Noise by Nate Hunter - [functions](https://github.com/badwrongg/gm_camera_and_views/blob/main/scripts/perlin_noise_lib/perlin_noise_lib.gml), [shader](https://github.com/badwrongg/gm_camera_and_views/tree/main/shaders/shd_perlin_noise_glsl_es)  
Disk Glow by [Xor](https://github.com/XorDev)  
Neon Glow by [Jan Vorisek](https://github.com/odditica/NeonGlow)  
Electric discharge simulation idea from [Pierluigi Pesenti](https://web.archive.org/web/20110802053412/http://blog.oaxoa.com/2009/04/26/actionscript-3-lightning-class-step-2/)  






